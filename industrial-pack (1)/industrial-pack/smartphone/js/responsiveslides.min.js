Plano> planos = new ArrayList<>();
            String sql = "SELECT * FROM PLANOS ORDER BY NOME ASC";
            Conecta con = new Conecta();
            ResultSet rs = con.consulta(sql);
            try {
                while(rs.next())
                {
                    Plano p = new Plano();
                    p.setId(rs.getInt("ID"));
                    p.setNome(rs.getString("NOME"));
                    p.setDescricao(rs.getString("DESCRICAO"));
                    p.setCod_externo(rs.getInt("COD_EXTERNO"));
                    planos.add(p);
                }
            } catch (SQLException ex) {
                Logger.getLogger(Plano.class.getName()).log(Level.SEVERE, null, ex);
                con.Desconecta();
                return null;
            }
            if(planos.isEmpty())
            {
                con.Desconecta();
                return null;
            }
            else
            {
                con.Desconecta();
                return planos;
            }
        }
        else
        {
            ArrayList<Plano> planos = new ArrayList<>();
            String sql = "SELECT * FROM PLANOS WHERE NOME LIKE '%"+busca+"%' OR DESCRICAO LIKE '%"+busca+"%' ORDER BY NOME ASC";
            Conecta con = new Conecta();
            ResultSet rs = con.consulta(sql);
            try {
                while(rs.next())
                {
                    Plano p = new Plano();
                    p.setId(rs.getInt("ID"));
                    p.setNome(rs.getString("NOME"));
                    p.setDescricao(rs.getString("DESCRICAO"));
                    p.setCod_externo(rs.getInt("COD_EXTERNO"));
                    planos.add(p);
                }
            } catch (SQLException ex) {
                Logger.getLogger(Plano.class.getName()).log(Level.SEVERE, null, ex);
                con.Desconecta();
                return null;
            }
            if(planos.isEmpty())
            {
                con.Desconecta();
                return null;
            }
            else
            {
                con.Desconecta();
                return planos;
            }
        }
    }
    
    /**
     * Busca um plano específicos no banco de dados
     * @param id id do plano
     * @return Classe com o plano, null caso não encontre
     */
    public static final Plano getPlano(int id)
    {
        if(id < 0)
        {
            return null;
        }
        else
        {
            String sql = "SELECT * FROM PLANOS WHERE ID = "+id;
            Conecta con = new Conecta();
            ResultSet rs = con.consulta(sql);
            try {
                if(rs.next())
                {
                    Plano p = new Plano();
                    p.setId(id);
                    p.setNome(rs.getString("NOME"));
                    p.setDescricao(rs.getString("DESCRICAO"));
                    p.setCod_externo(rs.getInt("COD_EXTERNO"));
                    con.Desconecta();
                    return p;
                }
                else
                {
                    return null;
                }
            } catch (SQLException ex) {
                con.Desconecta();
                Logger.getLogger(Plano.class.getName()).log(Level.SEVERE, null, ex);
                retu